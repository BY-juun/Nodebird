{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nvar _require = require('next-redux-wrapper'),\n    createWrapper = _require.createWrapper;\n\nimport reducer from '../reducers/index';\n\nvar configureStore = function configureStore() {\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/byeongjun/SNS(React+Node)/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","composeWithDevTools","require","createWrapper","reducer","configureStore","middlewares","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAsCC,OAAtC,QAAoD,OAApD;AAEA,SAAQC,mBAAR,QAAkC,0BAAlC;;AACA,eAAwBC,OAAO,CAAC,oBAAD,CAA/B;AAAA,IAAOC,aAAP,YAAOA,aAAP;;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GAAG,QACXP,OAAO,CAACF,eAAe,MAAf,SAAmBQ,WAAnB,CAAD,CADI,GAEXL,mBAAmB,CAACH,eAAe,MAAf,SAAmBQ,WAAnB,CAAD,CAFzB;AAGA,MAAME,KAAK,GAAGT,WAAW,CAACK,OAAD,EAAUG,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAG,iBADI;AAEXC,IAAAA,IAAI,EAAG;AAFI,GAAf;AAIA,SAAOH,KAAP;AACH,CAXD;;AAaA,IAAMI,OAAO,GAAGT,aAAa,CAACE,cAAD,EACzB;AAACQ,EAAAA,KAAK;AAAN,CADyB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore,compose} from 'redux';\n\nimport {composeWithDevTools} from 'redux-devtools-extension';\nconst {createWrapper} = require('next-redux-wrapper');\nimport reducer from '../reducers/index';\n\nconst configureStore = () => {\n    const middlewares = [];\n    const enhancer = process.env.NODE_ENV === 'production'\n        ? compose(applyMiddleware(...middlewares))\n        : composeWithDevTools(applyMiddleware(...middlewares))\n    const store = createStore(reducer, enhancer);\n    store.dispatch({\n        type : 'CHANGE_NICKNAME',\n        data : 'boogicho'\n    })\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore,\n    {debug : process.env.NODE_ENV === 'development'});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}